
plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'pl.allegro.tech.build.axion-release' version '1.12.0'
	id 'com.palantir.docker' version '0.25.0'
	id 'com.palantir.docker-run' version '0.25.0'
}

group = 'ru.geekbrains'
version = scmVersion.version
sourceCompatibility = '11'

repositories {
	mavenCentral()
	jcenter()
}

ext {
	set('springCloudVersion', "2020.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

}

String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'akropotov'
String imageName = "${dockerHubUsernameProperty}/config-server:$version"

docker {
	name imageName
	files "build/libs/${bootJar.archiveFileName.get()}"
	buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
	name project.name
	image imageName
	ports '9997:9997'
	clean true
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	ignoreFailures(true)
}


